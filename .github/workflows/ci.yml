name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main-agents:
    name: Nx Cloud - Main Job Agents
    runs-on: ubuntu-latest
    env:
      NX_CI_EXECUTION_ENV: agents
    steps:
      - uses: actions/checkout@v4
        name: Checkout [Pull Request]
        with:
          fetch-depth: 0

      - run: npx nx-cloud start-ci-run --distribute-on="2 linux-small-js"

      # Cache node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - uses: nrwl/nx-set-shas@v4

      # run js libs on agents
      - run: npx nx affected -t lint test build --exclude='*,!tag:js'

      # run react libs on main job
      - run: npx nx affected -t lint test build --exclude='*,!tag:react' --no-agents

      - run: npx nx-cloud stop-all-agents

  main-custom-dte:
    name: Nx Cloud - Main Job DTE
    runs-on: ubuntu-latest
    env:
      NX_CI_EXECUTION_ENV: dte
    steps:
      - uses: actions/checkout@v4
        name: Checkout [Pull Request]
        with:
          fetch-depth: 0

      - name: Use the package manager cache if available
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check out the default branch
        run: git branch --track main origin/main

      - name: Initialize the Nx Cloud distributed CI run and stop agents when the build tasks are done
        run: npx nx-cloud start-ci-run --stop-agents-after=e2e-ci

      - name: Run commands in parallel
        run: |
          # initialize an array to store process IDs (PIDs)
          pids=()

          # function to run commands and store the PID
          function run_command() {
            local command=$1
            $command &  # run the command in the background
            pids+=($!)  # store the PID of the background process
          }

          # list of commands to be run on dte
          run_command "npx nx affected -t e2e-ci --parallel=1"

          # wait for all background processes to finish
          for pid in ${pids[*]}; do
            if ! wait $pid; then
              exit 1  # exit with an error status if any process fails
            fi
          done

          exit 0 # exits with success status if a all processes complete successfully

  custom-dte-agents:
    name: DTE Agent ${{ matrix.agent }}
    runs-on: ubuntu-latest
    env:
      NX_CI_EXECUTION_ENV: dte
    strategy:
      matrix:
        # Add more agents here as your repository expands
        agent: [1, 2, 3]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use the package manager cache if available
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent
        env:
          NX_AGENT_NAME: ${{ matrix.agent }}
